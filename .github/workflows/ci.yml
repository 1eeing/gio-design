name: Continuous Integration
on:
  pull_request:
    types: [opened, synchronize]
jobs:
  scan:
    name: Code Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - run: git checkout HEAD^2
        if: ${{ github.event_name == 'pull_request' }}
  lint:
    name: Lint Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: '1'
      - name: Lint commits count
        if: ${{ github.event.pull_request.commits > 3 }}
        run: echo "::error the commits of pull request should not be more than 3"
      - name: Lint codes
        uses: github/super-linter@v3
        env:
          VALIDATE_ALL_CODEBASE: false
          CSS_FILE_NAME: stylelint.config.js
          JAVASCRIPT_ES_CONFIG_FILE: .eslintrc.js
          TYPESCRIPT_ES_CONFIG_FILE: .eslintrc.js
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  install:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: '1'
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.1
        with:
          node-version: 12.x
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Bootstrap
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn bootstrap
  build:
    name: Build Packages
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: '1'
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.1
        with:
          node-version: 12.x
      - name: Restore Node.js modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Cache packages
        uses: actions/cache@v2
        with:
          path: |
            packages/components/dist
            packages/components/es
            packages/icons/dist
            packages/icons/es
            packages/tokens/dist
          key: packages-${{ github.sha }}
      - name: Build
        run: yarn build
  test:
    name: Test Coverage
    if: ${{ !(startsWith(github.event.pull_request.title, 'chore') || startsWith(github.event.pull_request.title, 'docs')) }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: '1'
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.1
        with:
          node-version: 12.x
      - name: Restore Node.js modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Restore packages from cache
        uses: actions/cache@v2
        with:
          path: |
            packages/components/dist
            packages/components/es
            packages/icons/dist
            packages/icons/es
            packages/tokens/dist
          key: packages-${{ github.sha }}
      - name: Test
        run: yarn test --coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          directory: ./packages/components/coverage/
